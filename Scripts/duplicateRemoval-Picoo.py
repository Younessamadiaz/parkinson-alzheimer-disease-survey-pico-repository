# -*- coding: utf-8 -*-
"""Untitled38.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZC_74zm8exvxqOte9ZsFr3VYWprxzCtC
"""

import csv
from pathlib import Path

# ===== Paramètres =====
# Par défaut on lit le fichier uploadé dans /content/
INPUT_FILE = Path("/content/total-CSV.csv")

# Si tu as utilisé l’option B (Drive), décommente la ligne ci-dessous :
# INPUT_FILE = Path(INPUT_PATH)

OUT_WITH_ID = Path("/content/NewFilteredFulData062422.csv")
OUT_NO_ID   = Path("/content/NoDOI062422.csv")

# ===== Traitement (logique identique à ton script) =====
filtered = []   # lignes avec identifiant (7 premières colonnes + identifiant + dernière colonne)
nodoi    = []   # lignes sans identifiant
dois     = []   # pour dédupliquer

with open(INPUT_FILE, "r", encoding="utf-8", newline="") as f:
    filereader = csv.reader(f, delimiter=",", quotechar='"')
    h = next(filereader, None)  # saute l'en-tête si présent

    for row in filereader:
        # Sécurité minimale: si la ligne a moins de 8 colonnes, on la considère "sans identifiant"
        try:
            if row[7] == "":
                nodoi.append(row)
                continue
        except Exception:
            # ligne trop courte (pas de colonne 8)
            nodoi.append(row)
            continue

        # === Ta logique: extraire la partie après le dernier "/" ===
        doi1 = row[7][::-1].lower()   # inverse + minuscule
        i = doi1.find('/')            # premier "/" dans la chaîne inversée = dernier "/" à l'endroit
        doi = doi1[0:i][::-1]         # re-inverse ce qu'il y a après ce "/"

        if doi in dois:
            # doublon -> on ne l'ajoute pas à filtered
            print(doi)  # comme dans ton script
        else:
            dois.append(doi)
            newRow = row[:7]          # 7 premières colonnes
            newRow.append(doi)        # identifiant extrait
            newRow.append(row[-1])    # dernière colonne d'origine (Reason/commentaire)
            filtered.append(newRow)

# ===== Écriture des fichiers de sortie =====
header_out = ['Title', 'Authors', 'Published in', 'Year', 'Document Type', 'Keywords', 'Abstract', 'Identifier', 'Reason']

with open(OUT_WITH_ID, "w", encoding="utf-8", newline="") as f_ok:
    filewriter = csv.writer(f_ok, delimiter=",", quotechar='"', quoting=csv.QUOTE_ALL)
    filewriter.writerow(header_out)
    for line in filtered:
        filewriter.writerow(line[:9])  # on reste fidèle à ton script

with open(OUT_NO_ID, "w", encoding="utf-8", newline="") as f_nok:
    filewriter = csv.writer(f_nok, delimiter=",", quotechar='"', quoting=csv.QUOTE_ALL)
    filewriter.writerow(header_out)
    for line in nodoi:
        filewriter.writerow(line[:9])  # idem